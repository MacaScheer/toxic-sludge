{"code":"!function(t){var o={};function e(i){if(o[i])return o[i].exports;var n=o[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=t,e.c=o,e.d=function(t,o,i){e.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:i})},e.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},e.t=function(t,o){if(1&o&&(t=e(t)),8&o)return t;if(4&o&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&o&&\"string\"!=typeof t)for(var n in t)e.d(i,n,function(o){return t[o]}.bind(null,n));return i},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,\"a\",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p=\"\",e(e.s=1)}([function(t,o,e){const i=e(2),n=(e(3),e(4)),r=e(5);class s{constructor(t,o,e){this.xRange=o,this.yRange=e,this.dimensions=[this.x,this.y,this.x+50,this.y+50],this.type=t,this.canvasEl=document.getElementById(\"gameboard\"),this.ctx=this.canvasEl.getContext(\"2d\"),this.canvasEl.addEventListener(\"click\",(function(t){let o=[event.pageX,event.pageY];console.log(o)}))}}s.prototype.drawEntry=function(t,o,e){t.beginPath(),t.moveTo(0,25),t.lineTo(45,25),t.moveTo(45,10),t.lineTo(45,40),t.lineWidth=15,t.stroke()},s.prototype.drawExit=function(t,o,e){t.beginPath(),t.moveTo(50,25),t.lineTo(5,25),t.moveTo(5,10),t.lineTo(5,40),t.lineWidth=15,t.stroke()},s.prototype.drawShape=function(t,o,e){switch(this.type){case\"dblElbow\":this.drawDblElbow(t,o,e);break;case\"cross\":(new r).draw(t,o,e);break;case\"elbow\":(new i).draw(t,o,e);break;case\"barrier\":this.drawBarrier(t,o,e);break;case\"entryPipe\":this.drawEntry(t,o,e);break;case\"exitPipe\":this.drawExit(t,o,e);break;case\"straight\":(new n).draw(t,o,e)}},s.prototype.rotatable=function(){return\"entry\"!=this.shape&&\"exit\"!=this.shape&&\"cross\"!=this.shape&&\"barrier\"!=this.shape&&!this.locked},t.exports=s},function(t,o,e){e(0);const i=e(6);document.addEventListener(\"DOMContentLoaded\",(function(){const t=document.getElementById(\"gameboard\").getContext(\"2d\");new i(400,800).createGrid(t)}))},function(t,o,e){const i=e(0);t.exports=class extends i{constructor(){this.orientationIndex=Math.floor(4*Math.random()),this.radius=25,this.orientationArr=[{offset_x:0,offset_y:0,start:0*Math.PI,end:.5*Math.PI,openPoints:[\"left\",\"top\"],corner:\"topLeft\"},{offset_x:50,offset_y:0,start:.5*Math.PI,end:1*Math.PI,openPoints:[\"top\",\"right\"],corner:\"topRight\"},{offset_x:0,offset_y:50,start:1.5*Math.PI,end:2*Math.PI,openPoints:[\"left\",\"bottom\"],corner:\"bottomLeft\"},{offset_x:50,offset_y:50,start:1*Math.PI,end:1.5*Math.PI,openPoints:[\"right\",\"bottom\"],corner:\"bottomRight\"}],this.outDir=\"\",this.outPoint=\"\"}onClick(){this.orientationIndexndex=(this.orientationIndex+1)%orientationArr.length}draw(t,o,e){let i=this.orientationArr[this.orientationIndex];t.beginPath(),t.arc(o+i.offset_x,e+i.offset_y,this.radius,i.start,i.end),t.lineWidth=15,t.stroke()}validFlow(t){return this.orientationArr[this.orientationIndex].openPoints.includes(t)}direction(t){let o=this.orientationArr[this.orientationIndex].corner;\"topRight\"===o&&\"top\"===t&&(this.outPoint=\"right\",this.outDir=\"right\"),\"topRight\"===o&&\"right\"===t&&(this.outDir=\"up\",this.outPoint=\"top\"),\"topLeft\"===o&&\"top\"===t&&(this.outDir=\"left\",this.outPoint=\"left\"),\"topLeft\"===o&&\"left\"===t&&(this.outDir=\"up\",this.outPoint=\"top\"),\"bottomLeft\"===o&&\"left\"===t&&(this.outDir=\"down\",this.outPont=\"bottom\"),\"bottomLeft\"===o&&\"bottom\"===t&&(this.outDir=\"left\",this.outPoint=\"left\"),\"bottomRight\"===o&&\"right\"===t&&(this.outDir=\"down\",this.outPoint=\"bottom\"),\"bottomRight\"===o&&\"bottom\"===t&&(this.outDir=\"right\",this.outPoint=\"right\")}}},function(t,o,e){e(0);t.exports=class{constructor(){this.orientationIndex=Math.floor(5*Math.random()),this.radius=20,this.orientationArr=[{offset_x:0,offset_y:0,offset_x_2:25,offset_y_2:50,offset_x_3:50,offset_y_3:50,start_1:0,end_1:.5*Math.PI,start_2:Math.Pi,openPoints:[\"left\",\"up\"]},{offset_x:0,offset_y:0,offset_x_2:25,offset_y_2:50,offset_x_3:50,offset_y_3:50,start_1:0,end_1:2*Math.PI,start_2:1*Math.PI,end_2:2*Math.PI,openPoints:[\"left\",\"down\"]}]}draw(t,o,e){let i=this.orientationArr[this.orientationIndex];ctx.beginPath(),ctx.arc(t+i.offset_x_1,o+i.offset_y_1,25,i.start_1,i.end_1),ctx.moveTo(t+offset_x_2,o+offset_y_2),ctx.arc(t+offset_x_3,o+offset_y_3,25)}validFlow(t){return this.orientationArr[this.orientationIndex].openPoints.includes(t)}flowDirection(t){}onClick(){index=(index+1)%orientationArr.length}}},function(t,o,e){e(0);t.exports=class{constructor(){this.orientationIndex=Math.floor(2*Math.random()),this.orientationArr=[{offset_x_1:25,offset_y_1:0,offset_x_2:25,offset_y_2:50,openPoints:[\"up\",\"down\"],corner:\"upDown\"},{offset_x_1:0,offset_y_1:25,offset_x_2:50,offset_y_2:25,openPoints:[\"left\",\"right\"],corner:\"leftRight\"}],this.corner=this.orientationArr[this.orientationIndex].corner,this.outPoint=\"\",this.outDir=\"\"}draw(t,o,e){let i=this.orientationArr[this.orientationIndex];t.beginPath(),t.moveTo(o+i.offset_x_1,e+i.offset_y_1),t.lineTo(o+i.offset_x_2,e+i.offset_y_2),t.lineWidth=15,t.stroke()}validFlow(t){return this.orientationArr[this.orientationIndex].openPoints.includes(t)}direction(t){\"down\"===t&&\"upDown\"===this.corner&&(this.outPoint=\"bottom\",this.outDir=\"down\"),\"up\"===t&&\"upDown\"===this.corner&&(this.outPoint=\"top\",this.outDir=\"up\"),\"right\"===t&&\"leftRight\"===this.corner&&(this.outDir=\"right\",this.outPoint=\"right\"),\"left\"===this.inDir&&\"leftRight\"===this.corner&&(this.outDir=\"left\",this.outPoint=\"left\")}onClick(){this.orientationIndex=(this.orientationIndex+1)%this.orientationArr.length}}},function(t,o,e){e(0);t.exports=class{constructor(){}draw(t,o,e){t.beginPath(),t.moveTo(o+25,e+0),t.lineTo(o+25,e+50),t.moveTo(o+0,e+25),t.lineTo(o+50,e+25),t.lineWidth=15,t.stroke()}validFlow(t){return[\"up\",\"down\",\"left\",\"right\"].includes(t)}direction(t){return t}drawSlime(t,o){}}},function(t,o,e){const i=e(0);t.exports=class{constructor(t,o){this.width=o,this.height=t,this.types=[\"elbow\",\"straight\",\"cross\"]}createGrid(t){t.beginPath();for(let o=0,e=0;e<14;o+=50,e++)t.moveTo(0,o),t.lineTo(750,o),t.lineWidth=1,t.stroke();for(let o=0,e=0;e<16;o+=50,e++)t.moveTo(o,0),t.lineTo(o,650),t.stroke();for(let o=0,e=0;e<15;o+=50,e++)for(let e=0,n=0;n<13;e+=50,n++){let n=this.types[Math.floor(3*Math.random())];new i(n,[o,o+50],[e,e+50]).drawShape(t,o,e)}t.fill()}}}]);","extractedComments":[]}